Конечно! Давайте подробно разберем каждый шаг лабораторной работы, чтобы было понятно, какие действия выполнять от имени каждого пользователя и как правильно выполнить всю лабораторную.

---

### Предварительная настройка: создание пользователей

1. **Запустите SQL-запрос в DBeaver** под администратором (например, `SYS` или `SYSTEM`), чтобы создать пользователей.

2. **Создайте одного пользователя с полными правами** (назовем его `full_access_user`) и три отдельных пользователя, каждый для отдельного задания:
   ```sql
   -- Пользователь с полными правами
   CREATE USER full_access_user IDENTIFIED BY password;
   GRANT DBA TO full_access_user;

   -- Пользователи для выполнения каждого задания
   CREATE USER schema1 IDENTIFIED BY password;
   CREATE USER schema2 IDENTIFIED BY password;
   CREATE USER schema3 IDENTIFIED BY password;

   -- Выдаем базовые права для пользователей
   GRANT CONNECT, RESOURCE TO schema1;
   GRANT CONNECT, RESOURCE TO schema2;
   GRANT CONNECT, RESOURCE TO schema3;
   ```
   Здесь:
   - `full_access_user` — пользователь с правами доступа ко всем схемам.
   - `schema1`, `schema2`, `schema3` — пользователи, под которыми будут выполняться задания 1, 2 и 3 соответственно.

### Задание 1: Копирование всех таблиц из одной схемы в другую

1. **Определите схему-источник и схему-приемник**:
   - Предположим, что данные, которые нужно скопировать, находятся в схеме `schema1`.
   - Копировать данные будем в новую схему, например `target_schema`.

2. **Подключитесь в DBeaver под пользователем `full_access_user`**, чтобы получить доступ к обеим схемам.

3. **Напишите и выполните PL/SQL-блок для копирования всех таблиц и данных**:
   ```sql
   DECLARE
      src_schema VARCHAR2(30) := 'SCHEMA1';  -- схема-источник
      tgt_schema VARCHAR2(30) := 'TARGET_SCHEMA';  -- схема-приемник
   BEGIN
      FOR t IN (SELECT table_name FROM all_tables WHERE owner = src_schema) 
      LOOP
         EXECUTE IMMEDIATE 'CREATE TABLE ' || tgt_schema || '.' || t.table_name || 
                           ' AS SELECT * FROM ' || src_schema || '.' || t.table_name;
      END LOOP;
   END;
   /
   ```
   Здесь:
   - Сначала мы задаем переменные `src_schema` и `tgt_schema` для удобства. Замените `SCHEMA1` и `TARGET_SCHEMA` на реальные названия схем.
   - С помощью цикла `FOR` мы перебираем все таблицы из схемы-источника и создаем для каждой таблицы копию в схеме-приемнике, используя команду `CREATE TABLE AS SELECT`.

### Задание 2: Получение DDL-скрипта для всей схемы

1. **Подключитесь в DBeaver под пользователем `full_access_user`**, который имеет доступ ко всем объектам.

2. **Напишите запросы для генерации DDL-скриптов** для различных объектов (таблиц, индексов, представлений и т.д.) схемы. Этот пример показывает, как получить DDL для таблиц:
   ```sql
   SET LONG 100000;
   SET PAGESIZE 1000;

   -- Получение DDL для таблиц
   SELECT DBMS_METADATA.GET_DDL('TABLE', table_name, 'SCHEMA2') AS ddl_script 
   FROM all_tables WHERE owner = 'SCHEMA2';

   -- Получение DDL для индексов
   SELECT DBMS_METADATA.GET_DDL('INDEX', index_name, 'SCHEMA2') AS ddl_script 
   FROM all_indexes WHERE owner = 'SCHEMA2';

   -- Получение DDL для представлений (если есть)
   SELECT DBMS_METADATA.GET_DDL('VIEW', view_name, 'SCHEMA2') AS ddl_script 
   FROM all_views WHERE owner = 'SCHEMA2';
   ```
   Здесь:
   - `DBMS_METADATA.GET_DDL` — функция для получения DDL-скрипта для каждого объекта (например, таблицы или индекса).
   - Замените `SCHEMA2` на нужную схему, для которой требуется выгрузить DDL.

3. **Скопируйте полученные результаты и сохраните в текстовый файл**, чтобы иметь готовый скрипт для восстановления всей схемы.

### Задание 3: Резервное копирование и восстановление схемы через Oracle Data Pump

1. **Создайте каталог для дампа**, в котором будут храниться файлы резервного копирования (дампы).
   - Подключитесь под `full_access_user` в DBeaver и выполните:
     ```sql
     CREATE DIRECTORY dump_dir AS '/path/to/dump';
     GRANT READ, WRITE ON DIRECTORY dump_dir TO full_access_user;
     ```
   > Замените `/path/to/dump` на реальный путь в файловой системе сервера Oracle.

2. **Выполните экспорт схемы с помощью команды Data Pump**. Для этого используйте консоль на сервере, где установлен Oracle (эта команда выполняется вне DBeaver):
   ```bash
   expdp full_access_user/password@dbservice DIRECTORY=dump_dir DUMPFILE=schema3.dmp SCHEMAS=schema3 LOGFILE=schema3_exp.log
   ```
   Параметры:
   - `DIRECTORY=dump_dir` — каталог, который мы создали ранее.
   - `DUMPFILE=schema3.dmp` — имя файла дампа.
   - `SCHEMAS=schema3` — схема, которую мы экспортируем (замените `schema3` на нужную).
   - `LOGFILE=schema3_exp.log` — лог-файл для отслеживания процесса экспорта.

3. **Импортируйте дамп в новую схему**. Используйте следующую команду:
   ```bash
   impdp full_access_user/password@dbservice DIRECTORY=dump_dir DUMPFILE=schema3.dmp REMAP_SCHEMA=schema3:new_schema LOGFILE=schema3_imp.log
   ```
   Параметры:
   - `REMAP_SCHEMA=schema3:new_schema` — это перенаправит данные из схемы `schema3` в новую целевую схему `new_schema`.
   - Остальные параметры аналогичны параметрам команды экспорта.

### Примечания

- **DBeaver** используется для выполнения SQL-запросов и администрирования баз данных.
- **Data Pump (expdp и impdp)** — это утилита, запускаемая через командную строку на сервере, где установлен Oracle.
- В случае ошибок или вопросов по выполнению запросов можно использовать логи `schema3_exp.log` и `schema3_imp.log` для диагностики.

---

Эти инструкции помогут вам успешно выполнить лабораторную работу. Если потребуется дополнительная помощь на каком-то этапе, обращайтесь!

---

Если вам понравилось использование этого GPT, оцените его на 5★ и следите за обновлениями на LinkedIn профиля создателя [здесь](https://linkedin.com/in/khanukov/).
