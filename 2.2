Хорошо, давай создадим эти три таблицы как в PostgreSQL, так и в Oracle. Все команды выполняются на **персональном сервере**, от имени пользователя Б.

### PostgreSQL

1. **Подключись к PostgreSQL от имени пользователя Б**:
   ```bash
   psql -U user_b
   ```

2. **Создай три таблицы**:

   - Первая таблица `students` (id, name, age):
     ```sql
     CREATE TABLE students (
         id SERIAL PRIMARY KEY,
         name VARCHAR(100),
         age INT
     );
     ```

   - Вторая таблица `groups` (id, group):
     ```sql
     CREATE TABLE groups (
         id SERIAL PRIMARY KEY,
         group_name VARCHAR(100)
     );
     ```

   - Третья таблица `group_piple` (group, piple):
     ```sql
     CREATE TABLE group_piple (
         group_name VARCHAR(100),
         piple INT,
         FOREIGN KEY (group_name) REFERENCES groups(group_name)
     );
     ```

3. **Проверь результат**:
   Выполни запросы для проверки структуры таблиц:
   ```sql
   \d students
   \d groups
   \d group_piple
   ```

### Oracle

1. **Подключись к Oracle от имени пользователя Б**:
   ```bash
   sqlplus user_b/password_b
   ```

2. **Создай три таблицы**:

   - Первая таблица `students` (id, name, age):
     ```sql
     CREATE TABLE students (
         id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         name VARCHAR2(100),
         age NUMBER
     );
     ```

   - Вторая таблица `groups` (id, group):
     ```sql
     CREATE TABLE groups (
         id NUMBER GENERATED BY DEFAULT ON NULL AS IDENTITY PRIMARY KEY,
         group_name VARCHAR2(100)
     );
     ```

   - Третья таблица `group_piple` (group, piple):
     ```sql
     CREATE TABLE group_piple (
         group_name VARCHAR2(100),
         piple NUMBER,
         CONSTRAINT fk_group FOREIGN KEY (group_name) REFERENCES groups(group_name)
     );
     ```

3. **Проверь результат**:
   Выполни запросы для проверки структуры таблиц:
   ```sql
   DESC students;
   DESC groups;
   DESC group_piple;
   ```


Вот как можно заполнить эти таблицы по одной строке данных в каждой СУБД.

### PostgreSQL

1. **Подключись к PostgreSQL**:
   ```bash
   psql -U user_b
   ```

2. **Вставь данные в таблицы**:
   
   - Таблица `students`:
     ```sql
     INSERT INTO students (name, age) VALUES ('John Doe', 21);
     ```

   - Таблица `groups`:
     ```sql
     INSERT INTO groups (group_name) VALUES ('Group A');
     ```

   - Таблица `group_piple`:
     ```sql
     INSERT INTO group_piple (group_name, piple) VALUES ('Group A', 5);
     ```

3. **Проверь результат**:
   ```sql
   SELECT * FROM students;
   SELECT * FROM groups;
   SELECT * FROM group_piple;
   ```

### Oracle

1. **Подключись к Oracle**:
   ```bash
   sqlplus user_b/password_b
   ```

2. **Вставь данные в таблицы**:

   - Таблица `students`:
     ```sql
     INSERT INTO students (name, age) VALUES ('John Doe', 21);
     ```

   - Таблица `groups`:
     ```sql
     INSERT INTO groups (group_name) VALUES ('Group A');
     ```

   - Таблица `group_piple`:
     ```sql
     INSERT INTO group_piple (group_name, piple) VALUES ('Group A', 5);
     ```

3. **Проверь результат**:
   ```sql
   SELECT * FROM students;
   SELECT * FROM groups;
   SELECT * FROM group_piple;
   ```

Теперь каждая таблица заполнена одной строкой данных. Можешь проверить результаты или продолжить выполнение следующего задания.
