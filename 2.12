Ты завершил основное задание. Осталось необязательное задание, которое выполняется для получения дополнительных баллов.

### Необязательное задание на 5 баллов: **Создать таблицу для своей учебной группы, заполнить пользователями по количеству человек, добавить числовых столбцов по количеству лабораторных по дисциплине, добавить столько же таблиц с атрибутами id и name. Через минуту после изменения значения числового атрибута на 1, данный пользователь должен получить доступ к редактированию соответствующей таблицы, с 0 наоборот потерять.**

#### Шаги для выполнения:

1. **Создай таблицу для учебной группы**:
   Эта таблица будет содержать пользователей и количество лабораторных, которые они выполнили.
   ```sql
   CREATE TABLE group_students (
       id SERIAL PRIMARY KEY,
       name VARCHAR(100),
       lab1 INT,
       lab2 INT,
       lab3 INT
   );
   ```

2. **Создай таблицы для лабораторных**:
   Каждая таблица будет содержать атрибуты `id` и `name` для лабораторной работы.
   ```sql
   CREATE TABLE lab1 (
       id SERIAL PRIMARY KEY,
       name VARCHAR(100)
   );

   CREATE TABLE lab2 (
       id SERIAL PRIMARY KEY,
       name VARCHAR(100)
   );

   CREATE TABLE lab3 (
       id SERIAL PRIMARY KEY,
       name VARCHAR(100)
   );
   ```

3. **Заполни таблицу данными для группы студентов**:
   ```sql
   INSERT INTO group_students (name, lab1, lab2, lab3) VALUES ('John Doe', 0, 1, 0);
   INSERT INTO group_students (name, lab1, lab2, lab3) VALUES ('Jane Smith', 1, 0, 1);
   ```

4. **Настрой автоматическое изменение прав на таблицы**:
   Для этого можно использовать триггеры. Триггер будет срабатывать через минуту после изменения значений лабораторной работы.

   Пример триггера для первой лабораторной:
   ```sql
   CREATE OR REPLACE FUNCTION update_lab1_access() RETURNS trigger AS $$
   BEGIN
       IF NEW.lab1 = 1 THEN
           GRANT UPDATE ON lab1 TO user_b;
       ELSE
           REVOKE UPDATE ON lab1 FROM user_b;
       END IF;
       RETURN NEW;
   END;
   $$ LANGUAGE plpgsql;

   CREATE TRIGGER check_lab1_access
   AFTER UPDATE ON group_students
   FOR EACH ROW
   EXECUTE FUNCTION update_lab1_access();
   ```

   Этот триггер сработает после обновления столбца `lab1`. Если значение будет равно 1, пользователю будет предоставлен доступ на изменение таблицы `lab1`, если 0 — доступ будет отобран.

5. **Проверь результат**:
   Попробуй обновить значения в таблице `group_students` и проверь, получает ли пользователь доступ к соответствующей таблице лабораторной работы.

Пример обновления:
```sql
UPDATE group_students SET lab1 = 1 WHERE name = 'John Doe';
```

Это задание требует работы с триггерами и динамическими правами. Можешь сообщить, если будут вопросы или трудности с его выполнением.
